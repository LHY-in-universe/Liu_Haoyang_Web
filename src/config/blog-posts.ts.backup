/**
 * 博客文章配置文件
 * ⚠️ 此文件由 scripts/generate-blog-config.js 自动生成
 * 请勿直接编辑，如需修改请编辑 Markdown 文件的 frontmatter
 *
 * 生成时间: 2025/10/13 12:54:02
 */

// 文章类型定义
export interface BlogPost {
  id: string
  title: string
  date: string
  readTime: number
  author: string
  category: string
  tags: string[]
  type: 'markdown' | 'pdf'
  content: string
  isFilePath?: boolean
  excerpt: string
  cover?: string
}

export const blogPosts: BlogPost[] = [
  {
    "id": "template-post",
    "title": "博客文章模板",
    "date": "2025-10-13",
    "readTime": 5,
    "author": "刘昊阳",
    "category": "教程",
    "tags": [
      "模板",
      "示例",
      "Markdown"
    ],
    "type": "markdown",
    "content": "/blog-posts/TEMPLATE.md",
    "isFilePath": true,
    "excerpt": "这是一个博客文章模板，展示了如何使用 frontmatter 元数据。复制此模板快速创建新文章！",
    "cover": "/images/posts/template-cover.jpg"
  },
  {
    "id": "example",
    "title": "example",
    "date": "2025-10-13",
    "readTime": 3,
    "author": "刘昊阳",
    "category": "未分类",
    "tags": [],
    "type": "markdown",
    "content": "/blog-posts/example.md",
    "isFilePath": true,
    "excerpt": "这是一个使用 **Markdown** 编写的示例博客文章。\n\n\n\n\n\n- ✅ 标题和段落\n- ✅ **粗体** 和 *斜体*\n- ✅ 代码块和行内代码\n- ✅ 表格\n- ✅ 链接\n\n\n\n\n\n\n\n\n\n> 这是一个引用块示例。\n> \n> 可以用来突出显示重要信息或引用他人的观点。\n\n\n\n| 功能 | ..."
  },
  {
    "id": "welcome-post",
    "title": "welcome-post",
    "date": "2025-10-13",
    "readTime": 3,
    "author": "刘昊阳",
    "category": "未分类",
    "tags": [],
    "type": "markdown",
    "content": "/blog-posts/welcome-post.md",
    "isFilePath": true,
    "excerpt": "大家好！欢迎来到我的个人网站。这是我的第一篇正式博客文章。\n\n\n\n这个网站是使用现代化的技术栈构建的：\n\n- **前端框架**: Vue 3 (Composition API)\n- **构建工具**: Vite\n- **样式**: CSS Variables + 响应式设计\n- **博客系统**: ..."
  }
]

/**
 * 根据分类筛选文章
 */
export function getPostsByCategory(category: string): BlogPost[] {
  if (!category || category === 'all') {
    return blogPosts
  }
  return blogPosts.filter((post) => post.category === category)
}

/**
 * 根据标签筛选文章
 */
export function getPostsByTag(tag: string): BlogPost[] {
  return blogPosts.filter((post) => post.tags.includes(tag))
}

/**
 * 根据 ID 获取文章
 */
export function getPostById(id: string): BlogPost | undefined {
  return blogPosts.find((post) => post.id === id)
}

/**
 * 获取最新文章
 */
export function getRecentPosts(limit: number = 5): BlogPost[] {
  return [...blogPosts]
    .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())
    .slice(0, limit)
}

/**
 * 获取所有分类
 */
export function getAllCategories(): string[] {
  const categories = new Set(blogPosts.map((post) => post.category))
  return Array.from(categories)
}

/**
 * 获取所有标签
 */
export function getAllTags(): string[] {
  const tags = new Set(blogPosts.flatMap((post) => post.tags))
  return Array.from(tags)
}

/**
 * 搜索文章
 */
export function searchPosts(keyword: string): BlogPost[] {
  const lowerKeyword = keyword.toLowerCase()
  return blogPosts.filter(
    (post) =>
      post.title.toLowerCase().includes(lowerKeyword) ||
      post.excerpt.toLowerCase().includes(lowerKeyword) ||
      post.tags.some((tag) => tag.toLowerCase().includes(lowerKeyword))
  )
}
